name: E2E Tests

on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types: [completed]

jobs:
  e2e-test:
    name: E2E Test - Grafana ${{ matrix.grafana_version }}
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.event == 'pull_request'
    strategy:
      matrix:
        grafana_name: ["grafana-enterprise"]
        grafana_version: ["10.4.18", "11.6.1", "12.2.0"]
    env:
      GRAFANA_VERSION: ${{ matrix.grafana_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: Download artifact
        id: download-artifact
        uses: dawidd6/action-download-artifact@v11
        with:
          workflow: ci.yml
          commit: ${{ github.event.pull_request.head.sha }}
          name: plugin-package

      - name: Extract and prepare plugin
        run: |
          unzip hydrolix-hydrolix-datasource*.zip
          chmod +x hydrolix-hydrolix-datasource/gpx*

      - name: Install and run Docker Compose
        uses: hoverkraft-tech/compose-action@40041ff1b97dbf152cd2361138c2b03fa29139df
        with:
          compose-file: '.github/e2e-docker-compose.yml'

      - name: Install Playwright
        run: |
          npm install
          npx playwright install

      - name: Wait for Grafana
        run: |
          timeout 60s bash -c 'until curl -s http://localhost:3000/api/health; do sleep 2; done'
          
      - name: Run E2E tests
        run: npx playwright test --reporter=junit
        env:
          E2E_GRAFANA_URL: http://localhost:3000
          PLAYWRIGHT_JUNIT_OUTPUT_FILE: junit_report.xml
          
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: e2e-results-${{ matrix.grafana_version }}
          path: |
            test-results/**/*.png
            test-results/**/*.zip
            junit_report.xml
          retention-days: 7
